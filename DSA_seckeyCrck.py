import hashlib
from Crypto.Util.number import *

p = 89884656743115795746642899434630438071656694851782305694249182894075126536341663852906350714738582214880562517045136520202572884538120906879047046979872202500350141156599446123677961023043991984141073987975802780481578151605614952697351013818028511253072041748457132709206921490270180376535646380601546041247
q = 826126889081373330156288456695355028570909945129
g = 32835698639874579251688513682575041016338374767103813744565021713067900488948461848904427186955229222166198358003323782942223124272228100281062452644026541805398808023274917810281295021965294700764214776729544428675644032742950372879866907585071625649406669325139171542852581695719500809966864310783070499090
r = 474305132744738189941545317164725763482390332082
data1 = 5245602936431252244493810859980387722300337206034197755583857281272628802346966710282790360106234670125784805112586670265997449364027995568423120523579959084989791823477791004139023600091267991419590774110010877686535127978975786384976768451114931307458147593908471733718746822849738360018535509535931377491
s1 = 703563128068259511739403037949662330144787913697
data2 = 5245602936431252244493810859980387722300337206034197755583857281272628802346966710282790360106234670125784805112586670265997449364027995568423120523579959084989791823477791004139023600091267991419590774110010877686535127978975786384976768451114931307458147593908471733718746822849738360018535509535931377491
s2 = 656776393903858022138525634612025339387330671522

# ハッシュ値の計算
h1 = 885607691003867687544142427298758307835542039864
h2 = 337821102116421829132436828455309632821708001082
# s1 - s2 = inverse(k, q) * (h1 - h2)
# k = (s1 - s2) ^ -1 * (h1 - h2) mod q
k = inverse((s1 - s2), q) * (h1 - h2) % q

# x = (s * k - h) * inverse(r, q) mod q
x = ((s1 * k) - h1) * inverse(r, q) % q

print("Secret key x:", x)

# 復号対象のファイル名
encoded_flag_file = "encoded_flag.txt"

# エンコードされたフラグを読み込む
with open(encoded_flag_file, "rb") as f:
    enc_flag_data = f.read()

# エンコードされたフラグを整数に変換
enc_flag = bytes_to_long(enc_flag_data)

# 秘密鍵の逆操作を行って復号
seckey_int = x
dec_flag = enc_flag ^ (seckey_int + (5 ** 654) - 1)

# 復号されたフラグをバイト列に変換してUTF-8エンコーディングでファイルに書き込む
with open("decoded_flag.txt", "wb") as f:
    f.write(long_to_bytes(dec_flag))
    print(format(h1))
# 復号されたフラグをバイト列に変換してUTF-8エンコーディングでファイルに書き込む
with open("decoded_flag.txt", "wb") as f:
    f.write(long_to_bytes(dec_flag))
    print(format(dec_flag, 'x'))

